AnyFolder Supports = 
{
  Main.Model.HumanModel.Right.Leg.Seg.Foot
  =
  {
    AnyRefNode HeelMedialNode = 
    {
      ARel = RotMat(.ToeMedialContactNode.sRel, .ToeLateralContactNode.sRel, .HeelContactNodeLow.sRel);
      sRel = .HeelContactNodeLow.sRel + {-1, 0, 0}*ARel'*vnorm(.ToeMedialContactNode.sRel-.ToeLateralContactNode.sRel)*0.3;
    };
    AnyRefNode HeelLateralNode = 
    {
      ARel = RotMat(.ToeMedialContactNode.sRel, .ToeLateralContactNode.sRel, .HeelContactNodeLow.sRel);
      sRel = .HeelContactNodeLow.sRel + {1, 0, 0}*ARel'*vnorm(.ToeMedialContactNode.sRel-.ToeLateralContactNode.sRel)*0.3;
    };
    AnyRefNode MidPlaneNode = 
    {
      sRel = (.ToeMedialContactNode.sRel + .ToeLateralContactNode.sRel + .HeelContactNodeLow.sRel) / 3;
    };
  };
  
  Main.Model.HumanModel.Left.Leg.Seg.Foot
  =
  {
    AnyRefNode HeelMedialNode = 
    {
      ARel = RotMat(.ToeMedialContactNode.sRel, .ToeLateralContactNode.sRel, .HeelContactNodeLow.sRel);
      sRel = .HeelContactNodeLow.sRel + {-1, 0, 0}*ARel'*vnorm(.ToeMedialContactNode.sRel-.ToeLateralContactNode.sRel)*0.3;
    };
    AnyRefNode HeelLateralNode = 
    {
      ARel = RotMat(.ToeMedialContactNode.sRel, .ToeLateralContactNode.sRel, .HeelContactNodeLow.sRel);
      sRel = .HeelContactNodeLow.sRel + {1, 0, 0}*ARel'*vnorm(.ToeMedialContactNode.sRel-.ToeLateralContactNode.sRel)*0.3;
    };
    AnyRefNode MidPlaneNode = 
    {
      sRel = (.ToeMedialContactNode.sRel + .ToeLateralContactNode.sRel + .HeelContactNodeLow.sRel) / 3;
    };
  };  
  
  AnyRefFrame& BaseObject = Main.Model.Environment.GlobalRef;
  AnyVar UserDefinedLimitLow = Main.Parameters.GroundSupportBaseLimitLow;
  AnyVar UserDefinedLimitHigh = Main.Parameters.GroundSupportBaseLimitHigh;
  AnyVar UserDefinedRadiusLimit = Main.Parameters.GroundSupportBaseRadius;
  AnyVar UserDefinedStrength = Main.Parameters.GroundSupportBaseForceStrength;
  AnyVar UserDefinedStaticFrictionCoefficient = Main.Parameters.GroundSupportBaseFrictionCoefficient;    
  
  AnyFolder BigToeNodeRight = 
  {
    AnyRefNode &TargetObject = Main.Model.HumanModel.Right.Leg.Seg.Foot.BigToeNode;
    AnyRefFrame &BaseObject = .BaseObject; //Object which delivers the forces  
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object
    
    AnyFolder &DrawRef=Main.DrawSettings; //reference to the folder which contains drawsettings
    //low limit for the strength measure function, if the distance measured along Direction[0] is below this val. the strength will be zero (negative)
    AnyVar UserDefinedLimitLow = .UserDefinedLimitLow; 
    //high limit for the strength measure function, if the distance measured along Direction[0] is above this val. the strength will be zero
    AnyVar UserDefinedLimitHigh = .UserDefinedLimitHigh; 
    
    //high limit for the strength measure function, if the radius measured along the plane with Direction[0] as normal is above this val. the strength will be zero
    AnyVar UserDefinedRadiusLimit = .UserDefinedRadiusLimit; 
    
    AnyVar Strength = .UserDefinedStrength;//.Strength;  //strength of muscles
    AnyVar StaticFrictionCoefficient= .UserDefinedStaticFrictionCoefficient;//.StaticFrictionCoefficient; //Friction coefficient
    AnyVar ScaleFactor =1; //scale factor for draw vectors it can be set differently than by the drawsettings
    
    AnyIntArray Direction={1,0,2}; //first element gives normal direction
    #include  "<ANYBODY_PATH_TOOLBOX>\FrictionContactMuscles\ContactSurfaceLinPush.any"
    
    TargetObject = 
    {
      AnyDrawNode drw_sphere = 
      {
        ScaleXYZ = 0.005*{1, 1, 1};
        RGB = {1, 1, 0};
      };
    };
  };  
  
  AnyFolder ToeMedialContactNodeRight = 
  {
    AnyRefNode &TargetObject = Main.Model.HumanModel.Right.Leg.Seg.Foot.ToeMedialContactNode;
    AnyRefFrame &BaseObject = .BaseObject; //Object which delivers the forces  
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object
    
    AnyFolder &DrawRef=Main.DrawSettings; //reference to the folder which contains drawsettings
    //low limit for the strength measure function, if the distance measured along Direction[0] is below this val. the strength will be zero (negative)
    AnyVar UserDefinedLimitLow = .UserDefinedLimitLow; 
    //high limit for the strength measure function, if the distance measured along Direction[0] is above this val. the strength will be zero
    AnyVar UserDefinedLimitHigh = .UserDefinedLimitHigh; 
    
    //high limit for the strength measure function, if the radius measured along the plane with Direction[0] as normal is above this val. the strength will be zero
    AnyVar UserDefinedRadiusLimit = .UserDefinedRadiusLimit; 
    
    AnyVar Strength = .UserDefinedStrength;//.Strength;  //strength of muscles
    AnyVar StaticFrictionCoefficient= .UserDefinedStaticFrictionCoefficient;//.StaticFrictionCoefficient; //Friction coefficient
    AnyVar ScaleFactor =1; //scale factor for draw vectors it can be set differently than by the drawsettings
    
    AnyIntArray Direction={1,0,2}; //first element gives normal direction
    #include  "<ANYBODY_PATH_TOOLBOX>\FrictionContactMuscles\ContactSurfaceLinPush.any"
    
    TargetObject = 
    {
      AnyDrawNode drw_sphere = 
      {
        ScaleXYZ = 0.005*{1, 1, 1};
        RGB = {1, 1, 0};
      };
    };
  };
    
  AnyFolder ToeLateralContactNodeRight = 
  {
    AnyRefNode &TargetObject  = Main.Model.HumanModel.Right.Leg.Seg.Foot.ToeLateralContactNode;
    AnyRefFrame &BaseObject = .BaseObject; //Object which delivers the forces  
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object
    
    AnyFolder &DrawRef=Main.DrawSettings; //reference to the folder which contains drawsettings
    //low limit for the strength measure function, if the distance measured along Direction[0] is below this val. the strength will be zero (negative)
    AnyVar UserDefinedLimitLow = .UserDefinedLimitLow; 
    //high limit for the strength measure function, if the distance measured along Direction[0] is above this val. the strength will be zero
    AnyVar UserDefinedLimitHigh = .UserDefinedLimitHigh; 
    
    //high limit for the strength measure function, if the radius measured along the plane with Direction[0] as normal is above this val. the strength will be zero
    AnyVar UserDefinedRadiusLimit = .UserDefinedRadiusLimit; 
    
    AnyVar Strength = .UserDefinedStrength;//.Strength;  //strength of muscles
    AnyVar StaticFrictionCoefficient= .UserDefinedStaticFrictionCoefficient;//.StaticFrictionCoefficient; //Friction coefficient
    AnyVar ScaleFactor =1; //scale factor for draw vectors it can be set differently than by the drawsettings
    
    AnyIntArray Direction={1,0,2}; //first element gives normal direction
    #include  "<ANYBODY_PATH_TOOLBOX>\FrictionContactMuscles\ContactSurfaceLinPush.any"
    
    TargetObject = 
    {
      AnyDrawNode drw_sphere = 
      {
        ScaleXYZ = 0.005*{1, 1, 1};
        RGB = {1, 1, 0};
      };
    };    
  }; 
    
  AnyFolder HeelContactNodeLowRight = 
  {
    AnyRefNode &TargetObject = Main.Model.HumanModel.Right.Leg.Seg.Foot.HeelContactNodeLow;
    AnyRefFrame &BaseObject = .BaseObject; //Object which delivers the forces  
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object
    
    AnyFolder &DrawRef=Main.DrawSettings; //reference to the folder which contains drawsettings
    //low limit for the strength measure function, if the distance measured along Direction[0] is below this val. the strength will be zero (negative)
    AnyVar UserDefinedLimitLow = .UserDefinedLimitLow; 
    //high limit for the strength measure function, if the distance measured along Direction[0] is above this val. the strength will be zero
    AnyVar UserDefinedLimitHigh = .UserDefinedLimitHigh; 
    
    //high limit for the strength measure function, if the radius measured along the plane with Direction[0] as normal is above this val. the strength will be zero
    AnyVar UserDefinedRadiusLimit = .UserDefinedRadiusLimit; 
    
    AnyVar Strength = .UserDefinedStrength;//.Strength;  //strength of muscles
    AnyVar StaticFrictionCoefficient= .UserDefinedStaticFrictionCoefficient;//.StaticFrictionCoefficient; //Friction coefficient
    AnyVar ScaleFactor =1; //scale factor for draw vectors it can be set differently than by the drawsettings
    
    AnyIntArray Direction={1,0,2}; //first element gives normal direction
    #include  "<ANYBODY_PATH_TOOLBOX>\FrictionContactMuscles\ContactSurfaceLinPush.any"
    
    TargetObject = 
    {
      AnyDrawNode drw_sphere = 
      {
        ScaleXYZ = 0.005*{1, 1, 1};
        RGB = {1, 1, 0};
      };
    };    
  }; 
  
  AnyFolder HeelMedialNodeRight = 
  {
    AnyRefNode &TargetObject = Main.Model.HumanModel.Right.Leg.Seg.Foot.HeelMedialNode ;
    AnyRefFrame &BaseObject = .BaseObject; //Object which delivers the forces  
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object
    
    AnyFolder &DrawRef=Main.DrawSettings; //reference to the folder which contains drawsettings
    //low limit for the strength measure function, if the distance measured along Direction[0] is below this val. the strength will be zero (negative)
    AnyVar UserDefinedLimitLow = .UserDefinedLimitLow; 
    //high limit for the strength measure function, if the distance measured along Direction[0] is above this val. the strength will be zero
    AnyVar UserDefinedLimitHigh = .UserDefinedLimitHigh; 
    
    //high limit for the strength measure function, if the radius measured along the plane with Direction[0] as normal is above this val. the strength will be zero
    AnyVar UserDefinedRadiusLimit = .UserDefinedRadiusLimit; 
    
    AnyVar Strength = .UserDefinedStrength;//.Strength;  //strength of muscles
    AnyVar StaticFrictionCoefficient= .UserDefinedStaticFrictionCoefficient;//.StaticFrictionCoefficient; //Friction coefficient
    AnyVar ScaleFactor =1; //scale factor for draw vectors it can be set differently than by the drawsettings
    
    AnyIntArray Direction={1,0,2}; //first element gives normal direction
    #include  "<ANYBODY_PATH_TOOLBOX>\FrictionContactMuscles\ContactSurfaceLinPush.any"
    
    TargetObject = 
    {
      AnyDrawNode drw_sphere = 
      {
        ScaleXYZ = 0.005*{1, 1, 1};
        RGB = {1, 1, 0};
      };
    };    
  }; 
  
  AnyFolder HeelLateralNodeRight = 
  {
    AnyRefNode &TargetObject = Main.Model.HumanModel.Right.Leg.Seg.Foot.HeelLateralNode ;
    AnyRefFrame &BaseObject = .BaseObject; //Object which delivers the forces  
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object
    
    AnyFolder &DrawRef=Main.DrawSettings; //reference to the folder which contains drawsettings
    //low limit for the strength measure function, if the distance measured along Direction[0] is below this val. the strength will be zero (negative)
    AnyVar UserDefinedLimitLow = .UserDefinedLimitLow; 
    //high limit for the strength measure function, if the distance measured along Direction[0] is above this val. the strength will be zero
    AnyVar UserDefinedLimitHigh = .UserDefinedLimitHigh; 
    
    //high limit for the strength measure function, if the radius measured along the plane with Direction[0] as normal is above this val. the strength will be zero
    AnyVar UserDefinedRadiusLimit = .UserDefinedRadiusLimit; 
    
    AnyVar Strength = .UserDefinedStrength;//.Strength;  //strength of muscles
    AnyVar StaticFrictionCoefficient= .UserDefinedStaticFrictionCoefficient;//.StaticFrictionCoefficient; //Friction coefficient
    AnyVar ScaleFactor =1; //scale factor for draw vectors it can be set differently than by the drawsettings
    
    AnyIntArray Direction={1,0,2}; //first element gives normal direction
    #include  "<ANYBODY_PATH_TOOLBOX>\FrictionContactMuscles\ContactSurfaceLinPush.any"
    
    TargetObject = 
    {
      AnyDrawNode drw_sphere = 
      {
        ScaleXYZ = 0.005*{1, 1, 1};
        RGB = {1, 1, 0};
      };
    };    
  };    
  
  AnyFolder BigToeNodeLeft = 
  {
    AnyRefNode &TargetObject = Main.Model.HumanModel.Left.Leg.Seg.Foot.BigToeNode;
    AnyRefFrame &BaseObject = .BaseObject; //Object which delivers the forces  
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object
    
    AnyFolder &DrawRef=Main.DrawSettings; //reference to the folder which contains drawsettings
    //low limit for the strength measure function, if the distance measured along Direction[0] is below this val. the strength will be zero (negative)
    AnyVar UserDefinedLimitLow = .UserDefinedLimitLow; 
    //high limit for the strength measure function, if the distance measured along Direction[0] is above this val. the strength will be zero
    AnyVar UserDefinedLimitHigh = .UserDefinedLimitHigh; 
    
    //high limit for the strength measure function, if the radius measured along the plane with Direction[0] as normal is above this val. the strength will be zero
    AnyVar UserDefinedRadiusLimit = .UserDefinedRadiusLimit; 
    
    AnyVar Strength = .UserDefinedStrength;//.Strength;  //strength of muscles
    AnyVar StaticFrictionCoefficient= .UserDefinedStaticFrictionCoefficient;//.StaticFrictionCoefficient; //Friction coefficient
    AnyVar ScaleFactor =1; //scale factor for draw vectors it can be set differently than by the drawsettings
        
    AnyIntArray Direction={1,0,2}; //first element gives normal direction
    #include  "<ANYBODY_PATH_TOOLBOX>\FrictionContactMuscles\ContactSurfaceLinPush.any"
    
    TargetObject = 
    {
      AnyDrawNode drw_sphere = 
      {
        ScaleXYZ = 0.005*{1, 1, 1};
        RGB = {1, 1, 0};
      };
    };    
  };
  
  AnyFolder ToeMedialContactNodeLeft = 
  {
    AnyRefNode &TargetObject = Main.Model.HumanModel.Left.Leg.Seg.Foot.ToeMedialContactNode;
    AnyRefFrame &BaseObject = .BaseObject; //Object which delivers the forces  
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object
    
    AnyFolder &DrawRef=Main.DrawSettings; //reference to the folder which contains drawsettings
    //low limit for the strength measure function, if the distance measured along Direction[0] is below this val. the strength will be zero (negative)
    AnyVar UserDefinedLimitLow = .UserDefinedLimitLow; 
    //high limit for the strength measure function, if the distance measured along Direction[0] is above this val. the strength will be zero
    AnyVar UserDefinedLimitHigh = .UserDefinedLimitHigh; 
    
    //high limit for the strength measure function, if the radius measured along the plane with Direction[0] as normal is above this val. the strength will be zero
    AnyVar UserDefinedRadiusLimit = .UserDefinedRadiusLimit; 
    
    AnyVar Strength = .UserDefinedStrength;//.Strength;  //strength of muscles
    AnyVar StaticFrictionCoefficient= .UserDefinedStaticFrictionCoefficient;//.StaticFrictionCoefficient; //Friction coefficient
    AnyVar ScaleFactor =1; //scale factor for draw vectors it can be set differently than by the drawsettings
        
    AnyIntArray Direction={1,0,2}; //first element gives normal direction
    #include  "<ANYBODY_PATH_TOOLBOX>\FrictionContactMuscles\ContactSurfaceLinPush.any"
    
    TargetObject = 
    {
      AnyDrawNode drw_sphere = 
      {
        ScaleXYZ = 0.005*{1, 1, 1};
        RGB = {1, 1, 0};
      };
    };    
  };
  
  AnyFolder ToeLateralContactNodeLeft = 
  {
    AnyRefNode &TargetObject  = Main.Model.HumanModel.Left.Leg.Seg.Foot.ToeLateralContactNode;
    AnyRefFrame &BaseObject = .BaseObject; //Object which delivers the forces  
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object
    
    AnyFolder &DrawRef=Main.DrawSettings; //reference to the folder which contains drawsettings
    //low limit for the strength measure function, if the distance measured along Direction[0] is below this val. the strength will be zero (negative)
    AnyVar UserDefinedLimitLow = .UserDefinedLimitLow; 
    //high limit for the strength measure function, if the distance measured along Direction[0] is above this val. the strength will be zero
    AnyVar UserDefinedLimitHigh = .UserDefinedLimitHigh; 
    
    //high limit for the strength measure function, if the radius measured along the plane with Direction[0] as normal is above this val. the strength will be zero
    AnyVar UserDefinedRadiusLimit = .UserDefinedRadiusLimit; 
    
    AnyVar Strength = .UserDefinedStrength;//.Strength;  //strength of muscles
    AnyVar StaticFrictionCoefficient= .UserDefinedStaticFrictionCoefficient;//.StaticFrictionCoefficient; //Friction coefficient
    AnyVar ScaleFactor =1; //scale factor for draw vectors it can be set differently than by the drawsettings
        
    AnyIntArray Direction={1,0,2}; //first element gives normal direction
    #include  "<ANYBODY_PATH_TOOLBOX>\FrictionContactMuscles\ContactSurfaceLinPush.any"
    
    TargetObject = 
    {
      AnyDrawNode drw_sphere = 
      {
        ScaleXYZ = 0.005*{1, 1, 1};
        RGB = {1, 1, 0};
      };
    };    
  };
  
  AnyFolder HeelContactNodeLowLeft = 
  {  
    AnyRefNode &TargetObject = Main.Model.HumanModel.Left.Leg.Seg.Foot.HeelContactNodeLow;
    AnyRefFrame &BaseObject = .BaseObject; //Object which delivers the forces  
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object
    
    AnyFolder &DrawRef=Main.DrawSettings; //reference to the folder which contains drawsettings
    //low limit for the strength measure function, if the distance measured along Direction[0] is below this val. the strength will be zero (negative)
    AnyVar UserDefinedLimitLow = .UserDefinedLimitLow; 
    //high limit for the strength measure function, if the distance measured along Direction[0] is above this val. the strength will be zero
    AnyVar UserDefinedLimitHigh = .UserDefinedLimitHigh; 
    
    //high limit for the strength measure function, if the radius measured along the plane with Direction[0] as normal is above this val. the strength will be zero
    AnyVar UserDefinedRadiusLimit = .UserDefinedRadiusLimit; 
    
    AnyVar Strength = .UserDefinedStrength;//.Strength;  //strength of muscles
    AnyVar StaticFrictionCoefficient= .UserDefinedStaticFrictionCoefficient;//.StaticFrictionCoefficient; //Friction coefficient
    AnyVar ScaleFactor =1; //scale factor for draw vectors it can be set differently than by the drawsettings
        
    AnyIntArray Direction={1,0,2}; //first element gives normal direction
    #include  "<ANYBODY_PATH_TOOLBOX>\FrictionContactMuscles\ContactSurfaceLinPush.any"  
    
    TargetObject = 
    {
      AnyDrawNode drw_sphere = 
      {
        ScaleXYZ = 0.005*{1, 1, 1};
        RGB = {1, 1, 0};
      };
    };    
  };
  
  AnyFolder HeelMedialNodeLeft = 
  {  
    AnyRefNode &TargetObject = Main.Model.HumanModel.Left.Leg.Seg.Foot.HeelMedialNode;
    AnyRefFrame &BaseObject = .BaseObject; //Object which delivers the forces  
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object
    
    AnyFolder &DrawRef=Main.DrawSettings; //reference to the folder which contains drawsettings
    //low limit for the strength measure function, if the distance measured along Direction[0] is below this val. the strength will be zero (negative)
    AnyVar UserDefinedLimitLow = .UserDefinedLimitLow; 
    //high limit for the strength measure function, if the distance measured along Direction[0] is above this val. the strength will be zero
    AnyVar UserDefinedLimitHigh = .UserDefinedLimitHigh; 
    
    //high limit for the strength measure function, if the radius measured along the plane with Direction[0] as normal is above this val. the strength will be zero
    AnyVar UserDefinedRadiusLimit = .UserDefinedRadiusLimit; 
    
    AnyVar Strength = .UserDefinedStrength;//.Strength;  //strength of muscles
    AnyVar StaticFrictionCoefficient= .UserDefinedStaticFrictionCoefficient;//.StaticFrictionCoefficient; //Friction coefficient
    AnyVar ScaleFactor =1; //scale factor for draw vectors it can be set differently than by the drawsettings
        
    AnyIntArray Direction={1,0,2}; //first element gives normal direction
    #include  "<ANYBODY_PATH_TOOLBOX>\FrictionContactMuscles\ContactSurfaceLinPush.any"  
    
    TargetObject = 
    {
      AnyDrawNode drw_sphere = 
      {
        ScaleXYZ = 0.005*{1, 1, 1};
        RGB = {1, 1, 0};
      };
    };    
  };
  
  AnyFolder HeelLateralNodeLeft = 
  {  
    AnyRefNode &TargetObject = Main.Model.HumanModel.Left.Leg.Seg.Foot.HeelLateralNode;
    AnyRefFrame &BaseObject = .BaseObject; //Object which delivers the forces  
    AnyRefFrame &StrengthObject=TargetObject; //Node used for strength measurement, occasionally this is different from the target object
    
    AnyFolder &DrawRef=Main.DrawSettings; //reference to the folder which contains drawsettings
    //low limit for the strength measure function, if the distance measured along Direction[0] is below this val. the strength will be zero (negative)
    AnyVar UserDefinedLimitLow = .UserDefinedLimitLow; 
    //high limit for the strength measure function, if the distance measured along Direction[0] is above this val. the strength will be zero
    AnyVar UserDefinedLimitHigh = .UserDefinedLimitHigh; 
    
    //high limit for the strength measure function, if the radius measured along the plane with Direction[0] as normal is above this val. the strength will be zero
    AnyVar UserDefinedRadiusLimit = .UserDefinedRadiusLimit; 
    
    AnyVar Strength = .UserDefinedStrength;//.Strength;  //strength of muscles
    AnyVar StaticFrictionCoefficient= .UserDefinedStaticFrictionCoefficient;//.StaticFrictionCoefficient; //Friction coefficient
    AnyVar ScaleFactor =1; //scale factor for draw vectors it can be set differently than by the drawsettings
        
    AnyIntArray Direction={1,0,2}; //first element gives normal direction
    #include  "<ANYBODY_PATH_TOOLBOX>\FrictionContactMuscles\ContactSurfaceLinPush.any"  
    
    TargetObject = 
    {
      AnyDrawNode drw_sphere = 
      {
        ScaleXYZ = 0.005*{1, 1, 1};
        RGB = {1, 1, 0};
      };
    };    
  };     
  
};