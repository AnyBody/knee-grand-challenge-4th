MMType  TensorFasciaeLatae1NewPar = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TensorFasciaeLatae;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = MuscleParameters.Fcfast; // Factor for determining shortening speed at optimum length
   Jt = .Jt; // Shape parameter for the tendon stiffness
   Jpe = .Jpe; // Shape parameter for the parallel stiffness
   PEFactor = .PEFactor; // Parameter for influence of parallel stiffness
#endif
};

MMType  TensorFasciaeLatae2NewPar = {
   AnyFolder &MuscleParameters = .CadaverMusPar.TensorFasciaeLatae;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = MuscleParameters.Fcfast; // Factor for determining shortening speed at optimum length
   Jt = .Jt; // Shape parameter for the tendon stiffness
   Jpe = .Jpe; // Shape parameter for the parallel stiffness
   PEFactor = .PEFactor; // Parameter for influence of parallel stiffness
#endif
};

MMType  BicepsFemorisCaputLongum1NewPar = {
   AnyFolder &MuscleParameters = .CadaverMusPar.BicepsFemorisCaputLongum;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 1; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = MuscleParameters.Fcfast; // Factor for determining shortening speed at optimum length
   Jt = .Jt; // Shape parameter for the tendon stiffness
   Jpe = .Jpe; // Shape parameter for the parallel stiffness
   PEFactor = .PEFactor; // Parameter for influence of parallel stiffness
#endif
};

MMType  BicepsFemorisCaputBreve1NewPar = {
   AnyFolder &MuscleParameters = .CadaverMusPar.BicepsFemorisCaputBreve;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = MuscleParameters.Fcfast; // Factor for determining shortening speed at optimum length
   Jt = .Jt; // Shape parameter for the tendon stiffness
   Jpe = .Jpe; // Shape parameter for the parallel stiffness
   PEFactor = .PEFactor; // Parameter for influence of parallel stiffness
#endif
};

MMType  BicepsFemorisCaputBreve2NewPar = {
   AnyFolder &MuscleParameters = .CadaverMusPar.BicepsFemorisCaputBreve;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = MuscleParameters.Fcfast; // Factor for determining shortening speed at optimum length
   Jt = .Jt; // Shape parameter for the tendon stiffness
   Jpe = .Jpe; // Shape parameter for the parallel stiffness
   PEFactor = .PEFactor; // Parameter for influence of parallel stiffness
#endif
};

MMType  BicepsFemorisCaputBreve3NewPar = {
   AnyFolder &MuscleParameters = .CadaverMusPar.BicepsFemorisCaputBreve;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = MuscleParameters.Fcfast; // Factor for determining shortening speed at optimum length
   Jt = .Jt; // Shape parameter for the tendon stiffness
   Jpe = .Jpe; // Shape parameter for the parallel stiffness
   PEFactor = .PEFactor; // Parameter for influence of parallel stiffness
#endif
};

MMType  RectusFemoris1NewPar = {
   AnyFolder &MuscleParameters = .CadaverMusPar.RectusFemoris;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = MuscleParameters.Fcfast; // Factor for determining shortening speed at optimum length
   Jt = .Jt; // Shape parameter for the tendon stiffness
   Jpe = .Jpe; // Shape parameter for the parallel stiffness
   PEFactor = .PEFactor; // Parameter for influence of parallel stiffness
#endif
};

MMType  RectusFemoris2NewPar = {
   AnyFolder &MuscleParameters = .CadaverMusPar.RectusFemoris;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = MuscleParameters.Fcfast; // Factor for determining shortening speed at optimum length
   Jt = .Jt; // Shape parameter for the tendon stiffness
   Jpe = .Jpe; // Shape parameter for the parallel stiffness
   PEFactor = .PEFactor; // Parameter for influence of parallel stiffness
#endif
};

MMType  IliacusMid1NewPar = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusMid;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = MuscleParameters.Fcfast; // Factor for determining shortening speed at optimum length
   Jt = .Jt; // Shape parameter for the tendon stiffness
   Jpe = .Jpe; // Shape parameter for the parallel stiffness
   PEFactor = .PEFactor; // Parameter for influence of parallel stiffness
#endif
};

MMType  IliacusMid2NewPar = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusMid;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = MuscleParameters.Fcfast; // Factor for determining shortening speed at optimum length
   Jt = .Jt; // Shape parameter for the tendon stiffness
   Jpe = .Jpe; // Shape parameter for the parallel stiffness
   PEFactor = .PEFactor; // Parameter for influence of parallel stiffness
#endif
};

MMType  IliacusMedialis1NewPar = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusMedialis;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = MuscleParameters.Fcfast; // Factor for determining shortening speed at optimum length
   Jt = .Jt; // Shape parameter for the tendon stiffness
   Jpe = .Jpe; // Shape parameter for the parallel stiffness
   PEFactor = .PEFactor; // Parameter for influence of parallel stiffness
#endif
};

MMType  IliacusMedialis2NewPar = {
   AnyFolder &MuscleParameters = .CadaverMusPar.IliacusMedialis;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
#if BM_LEG_MORPHOLOGY == 1
   AnyIntVar MuscleElemAmount = 3; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 1
#if BM_LEG_MORPHOLOGY == 2
   AnyIntVar MuscleElemAmount = 2; ///< The total amount of elements for this muscle
#endif //BM_LEG_MORPHOLOGY == 2
   F0 = .StrengthScalePelvis*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScalePelvis*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = MuscleParameters.Fcfast; // Factor for determining shortening speed at optimum length
   Jt = .Jt; // Shape parameter for the tendon stiffness
   Jpe = .Jpe; // Shape parameter for the parallel stiffness
   PEFactor = .PEFactor; // Parameter for influence of parallel stiffness
#endif
};

MMType  Pectineus1NewPar = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Pectineus;
   AnyIntVar MuscleElemNo = 1; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = MuscleParameters.Fcfast; // Factor for determining shortening speed at optimum length
   Jt = .Jt; // Shape parameter for the tendon stiffness
   Jpe = .Jpe; // Shape parameter for the parallel stiffness
   PEFactor = .PEFactor; // Parameter for influence of parallel stiffness
#endif
};
MMType  Pectineus2NewPar = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Pectineus;
   AnyIntVar MuscleElemNo = 2; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = MuscleParameters.Fcfast; // Factor for determining shortening speed at optimum length
   Jt = .Jt; // Shape parameter for the tendon stiffness
   Jpe = .Jpe; // Shape parameter for the parallel stiffness
   PEFactor = .PEFactor; // Parameter for influence of parallel stiffness
#endif
};
MMType  Pectineus3NewPar = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Pectineus;
   AnyIntVar MuscleElemNo = 3; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = MuscleParameters.Fcfast; // Factor for determining shortening speed at optimum length
   Jt = .Jt; // Shape parameter for the tendon stiffness
   Jpe = .Jpe; // Shape parameter for the parallel stiffness
   PEFactor = .PEFactor; // Parameter for influence of parallel stiffness
#endif
};
MMType  Pectineus4NewPar = {
   AnyFolder &MuscleParameters = .CadaverMusPar.Pectineus;
   AnyIntVar MuscleElemNo = 4; ///< The number of this element of the muscle
   AnyIntVar MuscleElemAmount = 4; ///< The total amount of elements for this muscle
   F0 = .StrengthScaleThigh*.PCSAfactor*PCSA; // Maximum force output at optimum fiber length
#if MuscleModelType == "AnyMuscleModel"
#if PENNATIONANGLE_CORRECTION  == 0
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length, i.e., without pennation angle correction
#else
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength)*cos(pi/180*MuscleParameters.Pennationangle);///< PCSA is calculated as muscle volume divided between muscle branches, divided by fiber length and corrected for the pennation angle not used in the simple muscle model
#endif // End of pennation angle correction
#endif // End of simple muscle model parameters
#if MuscleModelType == "AnyMuscleModel3E"
   AnyVar PCSA = MuscleParameters.VolumeMuscleBelly/(MuscleElemAmount*MuscleParameters.OptimalFiberlength);///< PCSA is calculated as muscle volume divided between muscle branches and divided by fiber length
   Lfbar = .FiberLengthScaleThigh*(MuscleParameters.OptimalFiberlength/100); // Optimum fiber length
   Lt0 = iffun(eqfun(MuscleParameters.TotalTendonLength/100,0), 0.001, MuscleParameters.TotalTendonLength/100); // Tendon slack length (Cannot be zero)
   Gammabar = MuscleParameters.Pennationangle*(pi/180); // Pennation angle in radian
   Epsilonbar = MuscleParameters.EpsilonBar; // Tendon strain at F0
   K1 = MuscleParameters.K1; // Factor for determining shortening speed at optimum length
   K2 = MuscleParameters.K2; // Factor for determining shortening speed at optimum length
   Fcfast = MuscleParameters.Fcfast; // Factor for determining shortening speed at optimum length
   Jt = .Jt; // Shape parameter for the tendon stiffness
   Jpe = .Jpe; // Shape parameter for the parallel stiffness
   PEFactor = .PEFactor; // Parameter for influence of parallel stiffness
#endif
};