//AnyFunTransform3DLin Seg2ARF =
//{
//  ScaleMat =  ({{-0.012665, -0.032450, -0.999393}, {-0.089310, 0.995515, -0.031193}, { 0.995923, 0.088861, -0.015506}}*RotMat(pi/2, y))';
//  Offset = -{-0.000004, 0.000003, -0.000206};
//};
//AnyFunTransform3DLin PureGeom = 
//{      
//  ScaleMat = 
//  { 
//    {1, 0, 0}*1.0, 
//    {0, 1, 0}*1.0, 
//    {0, 0, 1}*1.0
//  };
//  Offset = {0, 0, 0};
//};
////AnyFunTransform3DIdentity PureGeom = {};
//AnyFunTransform3DLin ARF2Seg =
//{
//  ScaleMat = .Seg2ARF.ScaleMat' ;
//  Offset = -.Seg2ARF.Offset*ScaleMat;
//};    
//
//AnyFunTransform3D ScaleFunction = 
//{
//  PreTransforms =
//  {
//    &.Seg2ARF,
//    &.PureGeom,
//    &.ARF2Seg
//  };
//};

/* This file defines a subject-specific morphing law for the Lesson 4 of Scaling tutorial*/

AnyFolder MyScalingLaw = 
{
  //AnyFloat MirrorMat = {{1, 0, 0}, {0, 1, 0}, {0, 0, -1}};
  
  AnyFunTransform3DLin Transform = 
  {
    ScaleMat = {{1,0,0},{0,1,0},{0,0,1}};
    Offset = {0,0,0};
    PreTransforms = {&.STLTransform, &.ReverseTransform};
    //PreTransforms = {&.RBFTransform, &.ReverseTransform};
  };
  
  AnyFolder Landmarks = 
  {
    AnyFolder Source = 
    {
      AnyInputXML XMLObject = 
      {
        FileName = PATH_SOURCE_PATELLA_LANDMARKS ;
      };
      AnyFloat xptr0 = Obj2Num(ObjSelect("XMLObject.Contents.PickedPoints.point*.active", "==1", ".x_*"));
      AnyFloat yptr0 = Obj2Num(ObjSelect("XMLObject.Contents.PickedPoints.point*.active", "==1", ".y_*"));
      AnyFloat zptr0 = Obj2Num(ObjSelect("XMLObject.Contents.PickedPoints.point*.active", "==1", ".z_*"));
      AnyString PointNames = Obj2Str(ObjSelect("XMLObject.Contents.PickedPoints.point*.active", "==1", ".name")) ;
      AnyFloat Points = {xptr0',yptr0',zptr0'}';    
    };
    
    AnyFolder Target = 
    {
      AnyInputXML XMLObject = 
      {
        FileName = PATH_TARGET_PATELLA_LANDMARKS ;
      };
      AnyFloat xptr0 = Obj2Num(ObjSelect("XMLObject.Contents.PickedPoints.point*.active", "==1", ".x_*"));
      AnyFloat yptr0 = Obj2Num(ObjSelect("XMLObject.Contents.PickedPoints.point*.active", "==1", ".y_*"));
      AnyFloat zptr0 = Obj2Num(ObjSelect("XMLObject.Contents.PickedPoints.point*.active", "==1", ".z_*"));
      AnyString PointNames = Obj2Str(ObjSelect("XMLObject.Contents.PickedPoints.point*.active", "==1", ".name")) ;
      AnyFloat Points = {xptr0',yptr0',zptr0'}';   
    };
  };
  
  AnyFolder Surfaces = 
  {
    AnyString Source_Path = PATH_SOURCE_PATELLA_STL ;
    AnyString Target_Path = PATH_TARGET_PATELLA_PREOP_STL ;
    AnyFile Source = Source_Path;
    AnyFile Target = Target_Path;
  };  
  
  AnyFunTransform3DLin2 AffineTransform = 
  {
    //PreTransforms = {};
    Points0 = ..TSeg2ScaleFrame(.Landmarks.Source.Points);
    Points1 = .Landmarks.Target.Points;
    
    Mode = VTK_LANDMARK_AFFINE;
  };
    
  AnyFunTransform3DLin2 ReverseTransform = {
    Points0 = .AffineTransform.Points1;
    Points1 = .AffineTransform.Points0;
    Mode = VTK_LANDMARK_RIGIDBODY;
  };
    
  AnyFunTransform3DRBF RBFTransform = 
  {
    PreTransforms = {&.AffineTransform};
    RBFDef = 
    {
      Type = RBF_ThinPlate;
      Param = 1;
    };
    Points0 = .AffineTransform.Points0;
    Points1 = .AffineTransform.Points1;

    BoundingBox = 
    {
      Type = BB_Cartesian;
      ScaleXYZ = 2*{1, 1, 1};
      DivisionFactorXYZ = 5*{1, 1, 1};
    };
    BoundingBoxOnOff = On;
  };  
  
  AnyFunTransform3DSTL STLTransform = 
  {
    PreTransforms = {&.RBFTransform};
    RBFDef.Type = RBF_ThinPlate;
    AnyFixedRefFrame Input = 
    {
      AnySurfSTL SourceSurf = 
      {
        FileName = ...Surfaces.Source;
        ScaleXYZ = {1, 1, 1};
        AnyFunTransform3D& Transform = ....TSeg2ScaleFrame;
      };
      AnySurfSTL TargetSurf = 
      {
        FileName = ...Surfaces.Target;
        ScaleXYZ = {1, 1, 1};
      };
    };
    
    SurfaceObjects0 = {&Input.SourceSurf};
    SurfaceObjects1 = {&Input.TargetSurf};

    NumPoints = 100;
    BoundingBox.ScaleXYZ = 2.0*{1, 1, 1};
    BoundingBox.DivisionFactorXYZ = {1, 1, 1};
    BoundingBoxOnOff = On;
  };

  
};  // MyScalingLaw





