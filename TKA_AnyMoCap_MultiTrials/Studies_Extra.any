
#if USE_FDK == 1

AnyBodyStudy InitStudy = 
{
  AnyFolder& Parameters = ..ModelSetup.SubjectSpecificData.Ligaments ;
  AnyFolder& Ligaments = ..HumanModel.BodyModel.Right.Leg.Ligaments;
  
  AnyFolder& Thigh   = ..HumanModel.BodyModel.Right.Leg.Seg.Thigh;
  AnyFolder& Shank   = ..HumanModel.BodyModel.Right.Leg.Seg.Shank;
  AnyFolder& Patella = ..HumanModel.BodyModel.Right.Leg.Seg.Patella;
  //      AnyFolder& PatellaFemur = ..HumanModel.BodyModel.Right.Leg.Jnt.PatellaFemur;
  //      AnyFolder& KinematicMeasures = ..HumanModel.BodyModel.Right.Leg.Jnt.KinematicMeasures;
  //      AnyFolder& PatellaMovement = ..HumanModel.BodyModel.Right.Leg.Jnt.PatellaMovement;
  
  AnyFolder Drivers_Init = 
  {
    AnyKinEqSimpleDriver Thigh_Right_Lin =
    {
      AnyKinLinear lin = 
      {
        AnyRefFrame& ref0 = REF_HUMAN_BODYMODEL.Right.Leg.Seg.Thigh;
        
      };//lin
      DriverPos = REF_HUMAN_BODYMODEL.Right.Leg.Seg.Thigh.r0 ;
      DriverVel = {0, 0, 0};
      Reaction.Type = {Off, Off, Off};
    };//Thigh_Right_Lin
    AnyKinEqSimpleDriver Thigh_Right_Rot =
    {
      AnyKinRotational rot = 
      {
        AnyRefFrame& ref0 = REF_HUMAN_BODYMODEL.Right.Leg.Seg.Thigh.KneeJoint;            
        Type = RotAxesAngles;
        Axis1 = z;
        Axis2 = y;
        Axis3 = x;             
      };//rot
      DriverPos = pi/180*
      {
        Main.HumanModel.Mannequin.Posture.PelvisRotZ, 
        Main.HumanModel.Mannequin.Posture.PelvisRotY, 
        Main.HumanModel.Mannequin.Posture.PelvisRotX
      };
      DriverVel = pi/180*{0, 0, 0};
      Reaction.Type = {Off, Off, Off};
    };//Thigh_Right_Lin        
    
    AnyKinEqSimpleDriver TibioFemoral_Lin = 
    {
      AnyKinLinear lin = 
      {
        AnyRefFrame & ref0 = REF_HUMAN_BODYMODEL.Right.Leg.Seg.Thigh.PatientRefNode;
        AnyRefFrame & ref1 = REF_HUMAN_BODYMODEL.Right.Leg.Seg.Shank.PatientRefNode;
        Ref = 0;
      };
      DriverPos = DEF_CUSTOM_JOINT_INIT_OFFSET_TIBIOFEMORAL_LIN;
      DriverVel = {0, 0, 0};
      Reaction.Type = {Off, Off, Off};
    };
    AnyKinEqSimpleDriver TibioFemoral_Rot = 
    {
      AnyKinRotational rot = 
      {
        AnyRefFrame & ref0 = REF_HUMAN_BODYMODEL.Right.Leg.Seg.Thigh.PatientRefNode;
        AnyRefFrame & ref1 = REF_HUMAN_BODYMODEL.Right.Leg.Seg.Shank.PatientRefNode;
        Type = PlanarAngles;
      };
      DriverPos = DEF_CUSTOM_JOINT_INIT_OFFSET_TIBIOFEMORAL_ROT;
      DriverVel = {0, 0, 0};
      Reaction.Type = {Off, Off, Off};      
    };
    
    AnyKinEqSimpleDriver PatelloFemoral_Lin = 
    {
      AnyKinLinear lin = 
      {
        AnyRefFrame & ref0 = REF_HUMAN_BODYMODEL.Right.Leg.Seg.Thigh.PatientRefNode;
        AnyRefFrame & ref1 = REF_HUMAN_BODYMODEL.Right.Leg.Seg.Patella.PatientRefNode;
        Ref = 0;
      };
      DriverPos = DEF_CUSTOM_JOINT_INIT_OFFSET_PATELLOFEMORAL_LIN;
      DriverVel = {0, 0, 0};
      Reaction.Type = {Off, Off, Off};
    };
    AnyKinEqSimpleDriver PatelloFemoral_Rot = 
    {
      AnyKinRotational rot = 
      {
        AnyRefFrame & ref0 = REF_HUMAN_BODYMODEL.Right.Leg.Seg.Thigh.PatientRefNode;
        AnyRefFrame & ref1 = REF_HUMAN_BODYMODEL.Right.Leg.Seg.Patella.PatientRefNode;
        Type = PlanarAngles;
      };
      DriverPos = DEF_CUSTOM_JOINT_INIT_OFFSET_PATELLOFEMORAL_ROT;
      DriverVel = {0, 0, 0};
      Reaction.Type = {Off, Off, Off};      
    }; 
    
    //        AnyKinEqSimpleDriver KneeJoint_Right = 
    //        {
    //          AnyKinLinear lin = 
    //          {
    //            AnyRefFrame & ref0 = REF_HUMAN_BODYMODEL.Right.Leg.Seg.Thigh.KneeJoint;
    //            AnyRefFrame & ref1 = REF_HUMAN_BODYMODEL.Right.Leg.Seg.Shank.KneeJoint;
    //            Ref = 0;
    //          };
    //          AnyKinRotational rot = 
    //          {
    //            AnyRefFrame & ref0 = REF_HUMAN_BODYMODEL.Right.Leg.Seg.Thigh.KneeJoint;
    //            AnyRefFrame & ref1 = REF_HUMAN_BODYMODEL.Right.Leg.Seg.Shank.KneeJoint;
    //            Type = PlanarAngles;
    //          };
    //          DriverPos = {0, -DEF_CUSTOM_KNEE_JOINT_CONTACT_INIT_OFFSET, 0, 0, 0, 0};
    //          DriverVel = {0, 0, 0, 0, 0, 0};
    //          Reaction.Type = {Off, Off, Off, Off, Off, Off};
    //        }; //KneeJoint_Right 
  };      
  
  Gravity = Main.ModelSetup.LabSpecificData.Gravity;
  tStart = 0.0 ;
  tEnd = 1.0 ;
  nStep = 1 ;
  AnyFolder OutputFunctions_Length = {};    
};//InitStudy    

AnyDesEvalStudy EvalStudy = 
{
  Analysis =
  {
    AnyOperation& RunInit = ..InitStudy.Kinematics;
  }; 
};//EvalStudy    

InverseDynamicStudy = 
{
  InverseDynamics.Criterion.UpperBoundOnOff=On;
  InverseDynamics.Criterion.Power = DEF_MUSCLE_RECRUITMENT_CRITERION_POWER;
  InverseDynamics.Criterion.PrimaryTerm.Weight_SearchName = "WeightFactor";      
  
  InverseDynamics.ForceDepKinOnOff=On;
  InverseDynamics.ForceDepKin.SolverType = FDK_SolverType ;
  InverseDynamics.ForceDepKin.ForceTol = FDK_ForceTol ;
  InverseDynamics.ForceDepKin.UseAdaptiveForceTolOnOff = FDK_UseAdaptiveForceTolOnOff ;
  InverseDynamics.ForceDepKin.Perturbation = FDK_Perturbation;
  InverseDynamics.ForceDepKin.MaxIteration = FDK_MaxIteration;
  InverseDynamics.ForceDepKin.MaxNewtonStep = FDK_MaxNewtonStep;       
  InverseDynamics.ForceDepKin.LocalSearchOnOff = FDK_LocalSearchOnOff;      
  
  #if USE_FDK_SOFT_DRIVERS == 1
  InitialConditions.SolverType = KinSolOverDeterminate;
  Kinematics.SolverType = KinSolOverDeterminate;    
  #endif      
  
  AnyMechObjectExcluder ExcluderSelectiveMuscles = 
  {
    #if ((BM_LEG_RIGHT) == ON & (BM_LEG_MUSCLES_RIGHT != OFF)) & ((BM_LEG_LEFT) == ON & (BM_LEG_MUSCLES_LEFT != OFF))
    AnyObjectPtr pArrExcludedMuscles = arrcat
    (
    REF_HUMAN_BODYMODEL.Right.Leg.Mus.ExcludedMuscles.Objects,
    REF_HUMAN_BODYMODEL.Left.Leg.Mus.ExcludedMuscles.Objects
    );  
    #else
    #if (BM_LEG_RIGHT) == ON & (BM_LEG_MUSCLES_RIGHT != OFF)
    AnyObjectPtr pArrExcludedMuscles = REF_HUMAN_BODYMODEL.Right.Leg.Mus.ExcludedMuscles.Objects;
    #endif
    #if (BM_LEG_LEFT) == ON & (BM_LEG_MUSCLES_LEFT != OFF)
    AnyObjectPtr pArrExcludedMuscles = REF_HUMAN_BODYMODEL.Left.Leg.Mus.ExcludedMuscles.Objects;
    #endif      
    #endif
    
    Objects = pArrExcludedMuscles;
  };
  
  #ifdef USE_FDK_TIBIOFEMORAL
  REF_HUMAN_BODYMODEL.Right.Leg.Jnt.Knee = 
  {
    Constraints.CType  = {ForceDep, ForceDep, ForceDep, ForceDep, ForceDep};
    Constraints.Reaction.Type = {Off, Off, Off, Off, Off};
  };
  #endif  
  
  #ifdef USE_FDK_PATELLOFEMORAL
  REF_HUMAN_BODYMODEL.Right.Leg.Jnt.PatellaFemur =
  {
    Constraints.CType  = {ForceDep, ForceDep, ForceDep, ForceDep, ForceDep};
    Constraints.Reaction.Type = {Off, Off, Off, Off, Off};    
  };
  #endif
  
  AnyFolder Results = {};
  #ifdef PATH_eKneeData
  AnyFolder& eKneeData = Main.ModelSetup.TrialSpecificData.eKneeData;
  #include "Results_Contact.any"
  #endif        
};

#endif

#if USE_FDK == 1
AnyOperationSequence LigamentCalibrationSequence = 
{
  AnyOperation &LoadParameters = Main.ModelSetup.Macros.Load_parameters;
  AnyOperation& EvaluateLigamentLengths = .EvalStudy.UpdateDesign;
  AnyOperationMacro UpdateValues = 
  {
    MacroStr = 
    {
      "classoperation Main" + strquote("Update Values")
    };
  };  
};//LigamentCalibrationSequence
#endif


